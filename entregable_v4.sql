CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(10) UNIQUE NOT NULL,
  "email" varchar(20) UNIQUE NOT NULL,
  "password" varchar(7) UNIQUE NOT NULL,
  "age" int NOT NULL,
  "rol" int NOT NULL
);

CREATE TABLE "title_course" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title_course" varchar(15) NOT NULL
);

CREATE TABLE "courses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" int NOT NULL,
  "description" varchar(25) NOT NULL,
  "level" int NOT NULL,
  "teacher" int NOT NULL,
  "category" int NOT NULL,
  "url" int NOT NULL
);

CREATE TABLE "category" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title_category" varchar(20) UNIQUE NOT NULL
);

CREATE TABLE "course_videos" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title_videos" int NOT NULL,
  "url" varchar(7) UNIQUE NOT NULL
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "rol" varchar(15) NOT NULL
);

CREATE TABLE "class" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "student" int NOT NULL,
  "title_course" int NOT NULL,
  "course" int NOT NULL,
  "category" int NOT NULL
);

ALTER TABLE "class" ADD FOREIGN KEY ("student") REFERENCES "users" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("teacher") REFERENCES "users" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("url") REFERENCES "course_videos" ("id");

ALTER TABLE "class" ADD FOREIGN KEY ("category") REFERENCES "category" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("category") REFERENCES "category" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("title") REFERENCES "title_course" ("id");

ALTER TABLE "class" ADD FOREIGN KEY ("course") REFERENCES "courses" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("rol") REFERENCES "roles" ("id");

ALTER TABLE "course_videos" ADD FOREIGN KEY ("title_videos") REFERENCES "title_course" ("id");

ALTER TABLE "class" ADD FOREIGN KEY ("title_course") REFERENCES "title_course" ("id");


INSERT INTO roles (rol) VALUES ('student'), ('teacher'), ('admin');

INSERT INTO category (title_category) VALUES ('junior'), ('semi senior'), ('senior');

INSERT INTO title_course (title_course) VALUES ('js'), ('react.js'), ('node.js');

INSERT INTO course_videos (title_videos, url) VALUES (1, 'url1'), (2, 'url2'), (2, 'url3'), (3, 'url4');

INSERT INTO users (name, email, password, age, rol) VALUES ('Juan', 'juan@gmail', 'j123', 18, 1), ('Maria', 'maria@gmail', 'mt423', 20, 1), ('Pedro', 'pedro@gmail', 'p123', 27, 1), ('Santiago', 'santi@gmail', 's123', 30, 1), ('Ana', 'ana@gmail', 'a123', 20, 2), ('Martha', 'marta@gmail', 'm123', 25, 2), ('Marco', 'marco@gmail', 'ma123', 28, 2), ('Rodrigo', 'rodrigo@gmail', 'r123', 30, 3);

INSERT INTO courses (title, description, level, teacher, category, url) VALUES (1, 'js basics', 1, 5, 1, 1), (2, 'react.js basics', 1, 6, 1, 2), (3, 'node.js avanced', 2, 7, 2, 3), (2, 'react.js professional', 3, 7, 3, 4);

INSERT INTO class (student, title_course, course, category) VALUES (1, 1, 1, 1), (2, 1, 1, 1), (1, 2, 2, 1), (3, 2, 2, 1), (2, 3, 3, 2), (4, 3, 3, 2), (2, 2, 4, 3), (3, 2, 4, 3), (4, 2, 4, 3);


SELECT * FROM users;

SELECT * FROM title_course;

SELECT * FROM courses;

SELECT * FROM category;

SELECT * FROM course_videos;

SELECT * FROM roles;

SELECT * FROM class;


SELECT course_videos.id, title_course.title_course, course_videos.url FROM course_videos JOIN title_course ON course_videos.title_videos=title_course.id;

SELECT courses.id, title_course.title_course, courses.description, courses.level, users.name, category.title_category, course_videos.url FROM courses JOIN title_course ON courses.title=title_course.id JOIN users ON courses.teacher=users.id JOIN category ON courses.category=category.id JOIN course_videos ON courses.url=course_videos.id;

SELECT users.id, users.name, users.email, users.password, users.age, roles.rol FROM users JOIN roles ON roles.id=users.rol;

SELECT class.id, users.name, title_course.title_course, courses.description, courses.level, category.title_category FROM class JOIN courses ON courses.id=class.course JOIN category ON class.category=category.id JOIN users ON users.id = class.student JOIN title_course ON class.title_course=title_course.id;

